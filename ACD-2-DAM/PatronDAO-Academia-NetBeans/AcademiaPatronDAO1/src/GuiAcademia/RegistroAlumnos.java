/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GuiAcademia;

import factoryDAO.DaoFactory;
import interfaceIDao.IDao;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import modelosAcademia.Alumno;
import modelosDaos.AlumnoDao;

/**
 *
 * @author lfelipeh
 */
public class RegistroAlumnos extends javax.swing.JFrame {

    private TableRowSorter<DefaultTableModel> sorter;

    /**
     * Creates new form RegistroAlumnos
     */
    public RegistroAlumnos() throws ClassNotFoundException {
        initComponents();
        setLabelImage();
        initTable();
        cargarDatosEnTabla();

    }

    private void setLabelImage() {

        //ESTE CODIGO SE IMPLEMENTA CUANDO CREE EL JLABELIMAGE EN DESIGN.
        Image img1 = Toolkit.getDefaultToolkit().createImage("/home/lfelipeh/Documentos/AD2-DAM/NetBeansProjects/AcademiaPatronDAO1/src/GuiAcademia/images/logo-itaca.jpg");
        img1 = img1.getScaledInstance(jLabelImagen.getWidth(), jLabelImagen.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon img2 = new ImageIcon(img1);
        jLabelImagen.setIcon(img2);
    }

    public void cargarDatosEnTabla() throws ClassNotFoundException {
        DefaultTableModel modeloTabla = (DefaultTableModel) jTable1.getModel();
        modeloTabla.setRowCount(0); // Limpia la tabla antes de cargar datos nuevos

        AlumnoDao alumnoDao = new AlumnoDao();
        List<Alumno> listaAlumnos = alumnoDao.leerRegistrosBD();

        for (Alumno alumno : listaAlumnos) {
            Object[] fila = {
                alumno.getId_alumno(),
                alumno.getDni_alumno(),
                alumno.getNombre_alumno(),
                alumno.getApellido_alumno(),
                alumno.getDireccion_alumno(),
                alumno.getFecha_nacimiento(),
                alumno.getCodPostal_alumno(),
                alumno.getTelefono_alumno()
            };
            modeloTabla.addRow(fila);
        }
    }

    private void initTable() throws ClassNotFoundException {

        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new String[]{"ID-ALUMNO", "DNI-ALUMNO", "NOMBRE-ALUMNO", "APELLIDO-ALUMNO", "DIRECCION-ALUMNO", "FECHA-NACIMIENTO", "CODIGO-POSTAL", "TELEFONO-ALUMNO"});
        jTable1.setModel(model);
        sorter = new TableRowSorter<>(model);
        jTable1.setRowSorter(sorter);
        cargarDatosEnTabla();
    }

    private void updateTable(Alumno Palumno) {

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.addRow(Palumno.toArrayString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelHeader = new javax.swing.JLabel();
        jLabelImagen = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonDelete = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonCreate = new javax.swing.JButton();
        jLabelCreate = new javax.swing.JLabel();
        jLabelDelete = new javax.swing.JLabel();
        jTextFieldDelete = new javax.swing.JTextField();
        jButtonRead = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelHeader.setFont(new java.awt.Font("Ubuntu", 1, 26)); // NOI18N
        jLabelHeader.setForeground(new java.awt.Color(0, 153, 0));
        jLabelHeader.setText("LISTADO BD ALUMNOS IES ÍTACA 2 DESARROLLO APLICACIONES MULTIPLATAFORMA");
        jLabelHeader.setMinimumSize(new java.awt.Dimension(613, 22));
        jLabelHeader.setPreferredSize(new java.awt.Dimension(613, 22));

        jTable1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID ALUMNO", "DNI ALUMNO", "NOMBRE ALUMNO", "APELLIDOS ALUMNO", "DIRECCIÓN ALUMNO", "FECHA NACIMIENTO", "CODIGO POSTAL", "TELÉFONO ALUMNO"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jButtonDelete.setBackground(new java.awt.Color(255, 0, 51));
        jButtonDelete.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButtonDelete.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDelete.setText("Eliminar Registro");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonUpdate.setBackground(new java.awt.Color(51, 153, 255));
        jButtonUpdate.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButtonUpdate.setForeground(new java.awt.Color(255, 255, 255));
        jButtonUpdate.setText("Actualizar Registro");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonCreate.setBackground(new java.awt.Color(0, 153, 0));
        jButtonCreate.setFont(new java.awt.Font("Liberation Sans", 0, 26)); // NOI18N
        jButtonCreate.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCreate.setText("+");
        jButtonCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateActionPerformed(evt);
            }
        });

        jLabelCreate.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabelCreate.setText("Por favor si quiere agregar un registro, da click en el botón +");

        jLabelDelete.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabelDelete.setText("Por favor Introduza el id del alumno que quiere eliminar  (\"Número\") :");

        jButtonRead.setBackground(new java.awt.Color(20, 153, 0));
        jButtonRead.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButtonRead.setForeground(new java.awt.Color(255, 255, 255));
        jButtonRead.setText("Leer Registros");
        jButtonRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButtonUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldDelete)
                                    .addComponent(jButtonDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(59, 59, 59))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 1094, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButtonRead, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButtonCreate))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(23, 23, 23))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jLabelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonCreate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(jButtonRead, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        String idText = jTextFieldDelete.getText(); // Suponiendo que el JTextField se llama jTextFieldID

        if (idText.isEmpty()) {
            // Verificar que el campo no esté vacío
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un ID para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Convertir el texto del JTextField a un número (ID)
            int idAlumno = Integer.parseInt(idText);

            // Confirmar que el usuario realmente quiere eliminar el registro
            int confirmation = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea eliminar el registro con ID " + idAlumno + "?",
                    "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

            if (confirmation == JOptionPane.YES_OPTION) {
                // Eliminar el registro de la base de datos
                AlumnoDao alumnoDao = new AlumnoDao();
                boolean eliminado = alumnoDao.borrarRegistro(idAlumno); // Método para eliminar el registro

                if (eliminado) {
                    // Mostrar mensaje de éxito
                    JOptionPane.showMessageDialog(this, "¡Registro eliminado con éxito!", "Éxito", JOptionPane.INFORMATION_MESSAGE);

                    // Actualizar la tabla después de eliminar el registro
                    cargarDatosEnTabla();  // Recargar los datos en la tabla
                } else {
                    // Si no se pudo eliminar, mostrar mensaje de error
                    JOptionPane.showMessageDialog(this, "No se pudo eliminar el registro con ID " + idAlumno + ".",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (NumberFormatException e) {
            // Si el texto no es un número válido
            JOptionPane.showMessageDialog(this, "El ID debe ser un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RegistroAlumnos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        try {
            // TODO add your handling code here:
            RegistroAlumnos reg = new RegistroAlumnos();
            ActualizarAlumno formUpdate = new ActualizarAlumno(reg);
            formUpdate.setVisible(true);
            
            formUpdate.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                    try {
                        // Recargar la tabla después de que se haya cerrado el formulario
                        cargarDatosEnTabla();
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(RegistroAlumnos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            });
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RegistroAlumnos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateActionPerformed
        // TODO add your handling code here:
        FormularioAlumnos formAlumno = new FormularioAlumnos();
        formAlumno.setVisible(true);

        formAlumno.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                try {
                    // Recargar la tabla después de que se haya cerrado el formulario
                    cargarDatosEnTabla();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(RegistroAlumnos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }//GEN-LAST:event_jButtonCreateActionPerformed

    private void jButtonReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReadActionPerformed
        // TODO add your handling code here:
        boolean normalColor = false;
        if (normalColor) {
            jTable1.setBackground(Color.WHITE);
            jTable1.setForeground(Color.BLACK);
        } else {
            // Cambiar el color de fondo y el texto
            jTable1.setBackground(Color.LIGHT_GRAY);
            jTable1.setForeground(new Color(0, 153, 0));
        }

        try {
            AlumnoDao alumnoDao;

            alumnoDao = new AlumnoDao();
            List<Alumno> alumnos = alumnoDao.leerRegistrosBD();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RegistroAlumnos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonReadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new RegistroAlumnos().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(RegistroAlumnos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCreate;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonRead;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JLabel jLabelCreate;
    private javax.swing.JLabel jLabelDelete;
    private javax.swing.JLabel jLabelHeader;
    private javax.swing.JLabel jLabelImagen;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldDelete;
    // End of variables declaration//GEN-END:variables
}
